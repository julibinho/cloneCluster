vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
output<-singleLineage( max.seq.num = 30, max.timer =200, SHM.method = "poisson", baseline.mut = 0,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,10), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
output[[1]][[1]][1]
output[[1]][[1]]
output<-singleLineage( max.seq.num = 30, max.timer =200, SHM.method = "poisson", baseline.mut = 0,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1,10), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
output<-singleLineage( max.seq.num = 30, max.timer =200, SHM.method = "poisson", baseline.mut = 0,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1,10), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
output<-singleLineage( max.seq.num = 30, max.timer =200, SHM.method = "poisson", baseline.mut = 0,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1,10), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
output<-singleLineage( max.seq.num = 30, max.timer =200, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.01,
proportion.sampled = 1, sample.time = c(1,10), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
output<-singleLineage( max.seq.num = 30, max.timer =400, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.01,
proportion.sampled = 1, sample.time = c(1,10), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
library("AbSim")
library(ape)
library(poweRlaw)
output<-singleLineage( max.seq.num = 30, max.timer =400, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.01,
proportion.sampled = 1, sample.time = c(1,10), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
output<-singleLineage( max.seq.num = 30, max.timer =400, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,10), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
output<-singleLineage( max.seq.num = 30, max.timer =400, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,10), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
output<-singleLineage( max.seq.num = 30, max.timer =400, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,10,100,200,250,400), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
library("AbSim")
library(ape)
library(poweRlaw)
output<-singleLineage( max.seq.num = 30, max.timer =400, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,10,100,200,250,400), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
output<-singleLineage( max.seq.num = 30, max.timer =400, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,10,100,200,250,400), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 3)
output<-singleLineage( max.seq.num = 30, max.timer =400, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,10,100,200,250,400), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
output[[1]][[1]]
length(output[[1]][[1]])
output<-singleLineage( max.seq.num = 30, max.timer =600, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,10,100,200,250,400), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
output<-singleLineage( max.seq.num = 100, max.timer =600, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,10,100,200,250,400), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
output<-singleLineage( max.seq.num = 100, max.timer =600, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,2,3,4), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
library("AbSim")
library(ape)
library(poweRlaw)
output<-singleLineage( max.seq.num = 100, max.timer =600, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,2,3,4), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
output<-singleLineage( max.seq.num = 30, max.timer =600, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,2,3,4), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 0.1, max.VDJ = 1)
output[[1]][[1]]
output[[2]][[1]]
output[[3]][[1]]
output<-singleLineage( max.seq.num = 30, max.timer =600, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,2,3,4), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 1, max.VDJ = 1)
output[[3]][[1]]
output[[1]][[1]]
output<-singleLineage( max.seq.num = 30, max.timer =600, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 1, max.VDJ = 1)
output<-singleLineage( max.seq.num = 30, max.timer =600, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.057, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 1, max.VDJ = 1)
output[[3]][[1]]
output[[1]][[1]]
output<-singleLineage( max.seq.num = 30, max.timer =600, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.1, species = "hum", VDJ.branch.prob = 0.01,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 1, max.VDJ = 1)
library("AbSim")
library(ape)
library(poweRlaw)
output<-singleLineage( max.seq.num = 30, max.timer =600, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.1, species = "hum", VDJ.branch.prob = 0.01,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 1, max.VDJ = 1)
library("AbSim")
library(ape)
library(poweRlaw)
output<-singleLineage( max.seq.num = 30, max.timer =600, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.1, species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 1, max.VDJ = 1)
output<-singleLineage( max.seq.num = 30, max.timer =600, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.1, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 1, max.VDJ = 1)
library("AbSim")
library(ape)
library(poweRlaw)
output<-singleLineage( max.seq.num = 30, max.timer =600, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.1, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 1, max.VDJ = 1)
output[[3]][[1]]
output[[1]][[1]]
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.1, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 1, max.VDJ = 1)
library("AbSim")
library(ape)
library(poweRlaw)
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.1, species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 1, max.VDJ = 1)
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.1, species = "hum", VDJ.branch.prob = 0.0001,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 1, max.VDJ = 1)
output[[3]][[1]]
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "poisson", baseline.mut = 0.01,
SHM.branch.prob = 0.01, SHM.branch.param = "identical", SHM.nuc.prob = 0.1, species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 1, max.VDJ = 1)
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "poisson", baseline.mut = 0.08,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob = 0.04, species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 1, max.VDJ = *)
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "poisson", baseline.mut = 0.08,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob = 0.04, species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 1, max.VDJ = 2)
library("AbSim")
library(ape)
library(poweRlaw)
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "poisson", baseline.mut = 0.08,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob = 0.04, species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = 1, max.VDJ = 2)
library("AbSim")
library(ape)
library(poweRlaw)
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "poisson", baseline.mut = 0.08,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob = 0.04, species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 2)
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob = 0.04, species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 2)
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = c(0.05,0,0,0), SHM.branch.param = "identical", SHM.nuc.prob = 0.04, species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 2)
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.5, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.1,0,0,0), species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 2)
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.5, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 2)
library("AbSim")
library(ape)
library(poweRlaw)
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.5, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 2)
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.5, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 1)
library("AbSim")
library(ape)
library(poweRlaw)
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.5, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 1)
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.5, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 1)
library("AbSim")
library(ape)
library(poweRlaw)
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.5, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 1)
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 1)
output<-singleLineage( max.seq.num = 50, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 1)
output<-singleLineage( max.seq.num = 30, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.1,
proportion.sampled = 1, sample.time = c(1), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 1)
output<-singleLineage( max.seq.num = 30, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.01,
proportion.sampled = 1, sample.time = c(1), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 1)
output<-singleLineage( max.seq.num = 30, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.0001,
proportion.sampled = 1, sample.time = c(1), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 1)
output<-singleLineage( max.seq.num = 30, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.0001,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 1)
output[[3]][[1]]
output[[1]][[1]]
output<-singleLineage( max.seq.num = 30, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.0001,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 3)
output<-singleLineage( max.seq.num = 30, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 3)
output[[3]][[1]]
output[[1]][[1]]
output<-singleLineage( max.seq.num = 30, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.01,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 3)
output<-singleLineage( max.seq.num = 30, max.timer =200, SHM.method = "all", baseline.mut = 0.08,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.01,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 3)
output<-singleLineage( max.seq.num = 30, max.timer =200, SHM.method = "all", baseline.mut = 0,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.01,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 3)
output<-singleLineage( max.seq.num = 30, max.timer =200, SHM.method = "all", baseline.mut = 0,
SHM.branch.prob = 0.05, SHM.branch.param = "identical", SHM.nuc.prob =  c(0.04,0,0,0), species = "hum", VDJ.branch.prob = 0.001,
proportion.sampled = 1, sample.time = c(1,2), chain.type = "heavy", vdj.model = "data",
vdj.insertion.mean = "default", vdj.insertion.stdv = "default", max.VDJ = 3)
single.lineage.test <- AbSim::singleLineage(max.seq.num=20,max.timer=150,SHM.method="naive",baseline.mut = 0.0008,SHM.branch.prob = "identical", SHM.branch.param = 0.05, SHM.nuc.prob = 15/350,species="mus", max.VDJ = 3, VDJ.branch.prob = 0.3,proportion.sampled = 1,sample.time = 30, chain.type="heavy",vdj.model="naive", vdj.insertion.mean=4,vdj.insertion.stdv=2)
single.lineage.test <- AbSim::singleLineage(max.seq.num=20,max.timer=150,SHM.method="naive",baseline.mut = 0.0008,SHM.branch.prob = "identical", SHM.branch.param = 0.05, SHM.nuc.prob = 15/350,species="hum", max.VDJ = 3, VDJ.branch.prob = 0.3,proportion.sampled = 1,sample.time = 30, chain.type="heavy",vdj.model="naive", vdj.insertion.mean=4,vdj.insertion.stdv=2)
library("AbSim")
library(ape)
single.lineage.test <- AbSim::singleLineage(max.seq.num=20,max.timer=150,SHM.method="naive",baseline.mut = 0.0008,SHM.branch.prob = "identical", SHM.branch.param = 0.05, SHM.nuc.prob = 15/350,species="hum", max.VDJ = 3, VDJ.branch.prob = 0.3,proportion.sampled = 1,sample.time = 30, chain.type="heavy",vdj.model="naive", vdj.insertion.mean=4,vdj.insertion.stdv=2)
library("AbSim")
library(ape)
single.lineage.test <- AbSim::singleLineage(max.seq.num=20,max.timer=150,SHM.method="naive",baseline.mut = 0.0008,SHM.branch.prob = "identical", SHM.branch.param = 0.05, SHM.nuc.prob = 15/350,species="mus", max.VDJ = 3, VDJ.branch.prob = 0.3,proportion.sampled = 1,sample.time = 30, chain.type="heavy",vdj.model="naive", vdj.insertion.mean=4,vdj.insertion.stdv=2)
single.lineage.test[1]
single.lineage.test[[1]]
single.lineage.test[[1]][1]
single.lineage.test[[1]][[1]]
single.lineage.test[[1]][[1]]
single.lineage.test[[1]][[2]]
single.lineage.test[[1]][[1]][1]
single.lineage.test[[1]][[1]][2]
single.lineage.test[[2]][[1]]
single.lineage.test[[3]][[1]]
single.lineage.test[[2]]
single.lineage.test[[1]][[1]][2]
single.lineage.test[[2]][[1]]
single.lineage.test[[2]][[2]]
single.lineage.test[[2]][1]
single.lineage.test[[2]][2]
head(substring(single.lineage.test[[1]][[1]],first=1,last=20))
head(single.lineage.test[[1]][[1]])
single.lineage.test[[2]][[1]][1]
single.lineage.test[[2]][[1]]
single.lineage.test[[2]][[1]][2] #sequene names
single.lineage.test[[1]][[1]][2]
single.lineage.test[[3]][[1]]
single.lineage.test[[1]][[1]] # The tree (the only one in the Single lineage mode)
single.lineage.test[[1]] #The simulated nucleotide sequences
single.lineage.test[[1]][[1]] # The tree (the only one in the Single lineage mode)
single.lineage.test[[1]] #The simulated nucleotide sequences
single.lineage.test[[1]][[1]] # The tree (the only one in the Single lineage mode)
#Visualisation
plot(single.lineage.test[[3]][[1]],cex=.5)
title(single.lineage.test[[2]][[1]][1])
#Single lineage sampling
head(substring(single.lineage.test[[4]],first=1,last=20)) # Shows the sequences of the first sampling time point
head(single.lineage.test[[5]]) # Names corresponding to above sequences at same time point
single.lineage.test[[5]]
single.lineage.test[[5]]
full.repertoire.test <- AbSim::fullRepertoire(max.seq.num=30, max.timer=150, SHM.method="naive", baseline.mut = 0.0008, SHM.branch.prob = "identical", SHM.branch.param = 0.1, SHM.nuc.prob = 15/350, species="mus", VDJ.branch.prob = 0.8, proportion.sampled = 1, sample.time = 15,max.tree.num = 3, chain.type="heavy",vdj.model="naive", vdj.insertion.mean=4,vdj.insertion.stdv=2)
head(substring(full.repertoire.test[[1]][[1]],first=1,last=20)) # Sequences corresponding to first tree
head(full.repertoire.test[[2]][[1]]) # The names corresponding to sequences found in the first tree
plot(full.repertoire.test[[3]][[1]],cex=.5) # This shows the first simulated tree
title(full.repertoire.test[[2]][[2]][1]) # makes the germline sequence name the title
plot(full.repertoire.test[[3]][[3]],cex=.5) # This shows the third simulated tree
title(full.repertoire.test[[2]][[2]][1])
# Other phylogenetic tree properties (e.g., tip names) can be accessed by:
head(full.repertoire.test[[3]][[1]]$tip.label)
head(substring(full.repertoire.test[[4]][[2]],first=1,last=20)) # intermediate sequences at time point 20 for the second tree
head(substring(full.repertoire.test[[4]][[2]],first=1,last=20)) # intermediate sequences at time point 20 for the second tree
full.repertoire.test <- AbSim::fullRepertoire(max.seq.num=30, max.timer=150, SHM.method="naive", baseline.mut = 0.0008, SHM.branch.prob = "identical", SHM.branch.param = 0.1, SHM.nuc.prob = 15/350, species="mus", VDJ.branch.prob = 0.8, proportion.sampled = 1, sample.time = 15,max.tree.num = 3, chain.type="heavy",vdj.model="naive", vdj.insertion.mean=4,vdj.insertion.stdv=2)
head(substring(full.repertoire.test[[4]][[2]],first=1,last=20)) # intermediate sequences at time point 20 for the second tree
head(full.repertoire.test[[5]][[2]]) # names of the intermediate sequences at time point 20
expanded.test <- AbSim::clonalExpansion(ab.repertoire = full.repertoire.test,
rep.size = 90,
distribution = "id",
with.germline = FALSE)
length(expanded.test[[1]]) # expected 90 sequences
# Extracting final sequences
only.sequences <- unlist(full.repertoire.test[[1]])
head(substring(only.sequences,first=1,last=20))
print(single.lineage.test[[3]][[1]]$tip.label[1]) # extracts the germline V,D,J genes used
#Removing germline tip from tree
tree.without.germline <- ape::drop.tip(single.lineage.test[[3]][[1]],tip=1)
shiny::runApp('Desktop/ARGP-Tool-master')
runApp('Desktop/ARGP-Tool-master')
shiny::runApp('Desktop/ARGP-Tool-master')
library("AbSim")
library(ape)
#Single lineage
single.lineage.test <- AbSim::singleLineage(max.seq.num=20,max.timer=150,SHM.method="naive",baseline.mut = 0.0008,SHM.branch.prob = "identical", SHM.branch.param = 0.05, SHM.nuc.prob = 15/350,species="mus", max.VDJ = 3, VDJ.branch.prob = 0.3,proportion.sampled = 1,sample.time = 30, chain.type="heavy",vdj.model="naive", vdj.insertion.mean=4,vdj.insertion.stdv=2)
single.lineage.test[[1]] #The simulated nucleotide sequences
single.lineage.test[[1]][[1]] # The tree (the only one in the Single lineage mode)
single.lineage.test[[1]][[1]][1] # The germline sequence with the V-, D-, and J-genes simply appended to another
single.lineage.test[[1]][[1]][2] # Other simulated sequences
head(single.lineage.test[[1]][[1]]) # The germline genes
head(substring(single.lineage.test[[1]][[1]],first=1,last=20)) # the same thing as above juste showing the first 20 character
single.lineage.test[[2]][[1]][1] # the VDJ used for the simulation
#Single lineage
single.lineage.test <- AbSim::singleLineage(max.seq.num=20,max.timer=150,SHM.method="naive",baseline.mut = 0.0008,SHM.branch.prob = "identical", SHM.branch.param = 0.05, SHM.nuc.prob = 15/350,species="mus", max.VDJ = 3, VDJ.branch.prob = 0.3,proportion.sampled = 1,sample.time = 30, chain.type="heavy",vdj.model="naive", vdj.insertion.mean=4,species="hum",vdj.insertion.stdv=2)
#Single lineage
single.lineage.test <- AbSim::singleLineage(max.seq.num=20,max.timer=150,SHM.method="naive",baseline.mut = 0.0008,SHM.branch.prob = "identical", SHM.branch.param = 0.05, SHM.nuc.prob = 15/350, max.VDJ = 3, VDJ.branch.prob = 0.3,proportion.sampled = 1,sample.time = 30, chain.type="heavy",vdj.model="naive", vdj.insertion.mean=4,species="hum",vdj.insertion.stdv=2)
single.lineage.test[[2]][[1]][1] # the VDJ used for the simulation
#Single lineage
single.lineage.test <- AbSim::singleLineage(max.seq.num=20,max.timer=150,SHM.method="naive",baseline.mut = 0.0008,SHM.branch.prob = "identical", SHM.branch.param = 0.05, SHM.nuc.prob = 15/350, max.VDJ = 3, VDJ.branch.prob = 0.3,proportion.sampled = 1,sample.time = 30, chain.type="heavy",vdj.model="naive", vdj.insertion.mean=4,species="hum",vdj.insertion.stdv=2)
single.lineage.test[[2]][[1]][1] # the VDJ used for the simulation
head(single.lineage.test[[1]][[1]]) # The germline genes
single.lineage.test[[2]][[1]] # seq names
ighv_hum_df
V=ighv_hum_df
View(V)
repertoireFastas(single.lineage.test, fasta.name, with.germline)
fasta.name = "name.fasta"
repertoireFastas(single.lineage.test, fasta.name, with.germline)
repertoireFastas(single.lineage.test, fasta.name, with.germline = TRUE)
#Visualisation
plot(single.lineage.test[[3]][[1]],cex=.5)
title(single.lineage.test[[2]][[1]][1]) # the germline genes
View(single.lineage.test)
save.image("~/Desktop/simulated_onelineage.RData")
load("/Users/nikaabdollahi/Desktop/simulated_onelineage.RData")
saveRDS(single.lineage.test, file = "single.lineage.rds")
library("AbSim")
library(ape)
V=ighv_hum_df
#Single lineage
single.lineage.test <- AbSim::singleLineage(max.seq.num=20,max.timer=150,SHM.method="naive",baseline.mut = 0.0008,SHM.branch.prob = "identical", SHM.branch.param = 0.05, SHM.nuc.prob = 15/350, max.VDJ = 3, VDJ.branch.prob = 0.3,proportion.sampled = 1,sample.time = 30, chain.type="heavy",vdj.model="naive", vdj.insertion.mean=4,species="hum",vdj.insertion.stdv=2)
single.lineage.test[[1]] #The simulated nucleotide sequences
single.lineage.test[[1]][[1]] # The tree (the only one in the Single lineage mode)
single.lineage.test[[1]][[1]][1] # The germline sequence with the V-, D-, and J-genes simply appended to another
single.lineage.test[[1]][[1]][2] # Other simulated sequences
head(single.lineage.test[[1]][[1]]) # The germline genes
head(substring(single.lineage.test[[1]][[1]],first=1,last=20)) # the same thing as above juste showing the first 20 character
single.lineage.test[[2]][[1]][1] # the VDJ used for the simulation
single.lineage.test[[2]][[1]] # seq names
#Corresponding seq and name
single.lineage.test[[2]][[1]][2] #sequene
single.lineage.test[[1]][[1]][2] #name
single.lineage.test[[3]][[1]] #Phylogenetic tree (the only one in the Single lineage mode)
#Visualisation
plot(single.lineage.test[[3]][[1]],cex=.5)
title(single.lineage.test[[2]][[1]][1]) # the germline genes
#Write sequences in a fasta file
# with.germline = TRUE ===> write the germline sequence as the first sequence of the
fasta.name = "name.fasta"
repertoireFastas(single.lineage.test, fasta.name, with.germline = TRUE)
saveRDS(single.lineage.test, file = "single.lineage.rds")
single.lineage.test[[3]][[1]] #Phylogenetic tree (the only one in the Single lineage mode)
single.lineage& edge
single.lineage.test& edge
View(single.lineage.test)
single.lineage.test[[4]]
single.lineage.test[[3]][[1]]
single.lineage.test[[3]][[1]]&edges(nodes0)
single.lineage.test[[3]][[1]]&edges
single.lineage.test[[3]][[1]]&edge
V=ighv_hum_df
#Single lineage
single.lineage.test <- AbSim::singleLineage(max.seq.num=200,max.timer=150,SHM.method="naive",baseline.mut = 0.0008,SHM.branch.prob = "identical", SHM.branch.param = 0.05, SHM.nuc.prob = 15/350, max.VDJ = 3, VDJ.branch.prob = 0.3,proportion.sampled = 1,sample.time = 30, chain.type="heavy",vdj.model="naive", vdj.insertion.mean=4,species="hum",vdj.insertion.stdv=2)
single.lineage.test[[1]] #The simulated nucleotide sequences
single.lineage.test[[1]][[1]] # The tree (the only one in the Single lineage mode)
single.lineage.test[[1]][[1]][1] # The germline sequence with the V-, D-, and J-genes simply appended to another
single.lineage.test[[1]][[1]][2] # Other simulated sequences
single.lineage.test[[3]][[1]]&edge
head(single.lineage.test[[1]][[1]]) # The germline genes
head(substring(single.lineage.test[[1]][[1]],first=1,last=20)) # the same thing as above juste showing the first 20 character
single.lineage.test[[2]][[1]][1] # the VDJ used for the simulation
single.lineage.test[[2]][[1]] # seq names
#Corresponding seq and name
single.lineage.test[[2]][[1]][2] #sequene
single.lineage.test[[1]][[1]][2] #name
single.lineage.test& edge
single.lineage.test[[3]][[1]] #Phylogenetic tree (the only one in the Single lineage mode)
#Visualisation
plot(single.lineage.test[[3]][[1]],cex=.5)
#Single lineage
single.lineage.test <- AbSim::singleLineage(max.seq.num=50,max.timer=150,SHM.method="naive",baseline.mut = 0.0008,SHM.branch.prob = "identical", SHM.branch.param = 0.05, SHM.nuc.prob = 15/350, max.VDJ = 3, VDJ.branch.prob = 0.3,proportion.sampled = 1,sample.time = 30, chain.type="heavy",vdj.model="naive", vdj.insertion.mean=4,species="hum",vdj.insertion.stdv=2)
single.lineage.test[[1]] #The simulated nucleotide sequences
single.lineage.test[[1]][[1]] # The tree (the only one in the Single lineage mode)
single.lineage.test[[1]][[1]][1] # The germline sequence with the V-, D-, and J-genes simply appended to another
single.lineage.test[[1]][[1]][2] # Other simulated sequences
single.lineage.test[[3]][[1]]&edge
head(single.lineage.test[[1]][[1]]) # The germline genes
head(substring(single.lineage.test[[1]][[1]],first=1,last=20)) # the same thing as above juste showing the first 20 character
single.lineage.test[[2]][[1]][1] # the VDJ used for the simulation
single.lineage.test[[2]][[1]] # seq names
#Corresponding seq and name
single.lineage.test[[2]][[1]][2] #sequene
single.lineage.test[[1]][[1]][2] #name
single.lineage.test& edge
single.lineage.test[[3]][[1]] #Phylogenetic tree (the only one in the Single lineage mode)
#Visualisation
plot(single.lineage.test[[3]][[1]],cex=.5)
install.packages("devtools")
install.packages("scoper")
library("scoper")
install.packages("rlang")
library("scoper")
install.packages("rlang")
install.packages("ggplot2")
library("scoper")
library("scoper")
install.packages("ggplot2")
install.packages("devtools")
install.packages("rlang")
library("scoper")
install.packages("rlang")
install.packages("ggplot2")
install.packages("scoper")
library("scoper")
install.packages("hms")
library("scoper")
library("scoper")
library("scoper")
setwd('/Users/nikaabdollahi/Desktop/simp_indel/Raw_output/Scoper/change-o_output/')
dat<- read.table("mono_simp_indel_db-pass.tab",sep="\t", header=TRUE,stringsAsFactors=FALSE)
dat[,4] = toupper(dat[,4]) # Junction sequences should be in uppercase
# clone data using defineClonesScope function
ptm <- proc.time()
dataset <- defineClonesScoper(dat, junction = "JUNCTION", v_call = "V_CALL",j_call = "J_CALL", first = TRUE)
proc.time() - ptm
export <- dataset[,c("CLONE","SEQUENCE_ID","JUNCTION")]
write.table(export, file = "mono_simp_indel_scoper.txt", quote = FALSE, sep = "\t", row.names = FALSE,
col.names = FALSE)
export <- dataset[,c("CLONE","SEQUENCE_ID","JUNCTION")]
export <- dataset[,c("CLONE_id","SEQUENCE_ID","JUNCTION")]
export <- dataset[,c("Clone_id","SEQUENCE_ID","JUNCTION")]
export <- dataset[,c("clone_id","SEQUENCE_ID","JUNCTION")]
write.table(export, file = "mono_simp_indel_scoper.txt", quote = FALSE, sep = "\t", row.names = FALSE,
col.names = FALSE)
library("scoper")
setwd('/Users/nikaabdollahi/Desktop/simp_indel/Raw_output/Scoper/change-o_output/')
dat<- read.table("oligo_simp_indel_db-pass.tab",sep="\t", header=TRUE,stringsAsFactors=FALSE)
dat[,4] = toupper(dat[,4]) # Junction sequences should be in uppercase
# clone data using defineClonesScope function
ptm <- proc.time()
dataset <- defineClonesScoper(dat, junction = "JUNCTION", v_call = "V_CALL",j_call = "J_CALL", first = TRUE)
proc.time() - ptm
export <- dataset[,c("clone_id","SEQUENCE_ID","JUNCTION")]
write.table(export, file = "oligo_simp_indel_scoper.txt", quote = FALSE, sep = "\t", row.names = FALSE,
col.names = FALSE)
library("scoper")
setwd('/Users/nikaabdollahi/Desktop/simp_indel/Raw_output/Scoper/change-o_output/')
dat<- read.table("poly_simp_indel_db-pass.tab",sep="\t", header=TRUE,stringsAsFactors=FALSE)
dat[,4] = toupper(dat[,4]) # Junction sequences should be in uppercase
# clone data using defineClonesScope function
ptm <- proc.time()
dataset <- defineClonesScoper(dat, junction = "JUNCTION", v_call = "V_CALL",j_call = "J_CALL", first = TRUE)
proc.time() - ptm
export <- dataset[,c("clone_id","SEQUENCE_ID","JUNCTION")]
write.table(export, file = "poly_simp_indel_scoper.txt", quote = FALSE, sep = "\t", row.names = FALSE,
col.names = FALSE)
